{"ast":null,"code":"import Chart from \"chart.js\";\nimport * as i0 from \"@angular/core\";\nexport let StatisticComponent = /*#__PURE__*/(() => {\n  class StatisticComponent {\n    constructor() {}\n\n    ngOnInit() {}\n\n    ngAfterViewInit() {\n      var config = {\n        type: \"line\",\n        data: {\n          labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n          datasets: [{\n            label: new Date().getFullYear(),\n            backgroundColor: \"#4c51bf\",\n            borderColor: \"#4c51bf\",\n            data: [100, 200, 66, 44, 56, 67, 75],\n            fill: false\n          }, {\n            label: new Date().getFullYear() - 1,\n            fill: false,\n            backgroundColor: \"#fff\",\n            borderColor: \"#fff\",\n            data: [40, 68, 86, 74, 56, 60, 87]\n          }]\n        },\n        options: {\n          maintainAspectRatio: false,\n          responsive: true,\n          title: {\n            display: false,\n            text: \"Sales Charts\",\n            fontColor: \"white\"\n          },\n          legend: {\n            labels: {\n              fontColor: \"white\"\n            },\n            align: \"end\",\n            position: \"bottom\"\n          },\n          tooltips: {\n            mode: \"index\",\n            intersect: false\n          },\n          hover: {\n            mode: \"nearest\",\n            intersect: true\n          },\n          scales: {\n            xAxes: [{\n              ticks: {\n                fontColor: \"rgba(255,255,255,.7)\"\n              },\n              display: true,\n              scaleLabel: {\n                display: false,\n                labelString: \"Month\",\n                fontColor: \"white\"\n              },\n              gridLines: {\n                display: false,\n                borderDash: [2],\n                borderDashOffset: [2],\n                color: \"rgba(33, 37, 41, 0.3)\",\n                zeroLineColor: \"rgba(0, 0, 0, 0)\",\n                zeroLineBorderDash: [2],\n                zeroLineBorderDashOffset: [2]\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                fontColor: \"rgba(255,255,255,.7)\"\n              },\n              display: true,\n              scaleLabel: {\n                display: false,\n                labelString: \"Value\",\n                fontColor: \"white\"\n              },\n              gridLines: {\n                borderDash: [3],\n                borderDashOffset: [3],\n                drawBorder: false,\n                color: \"rgba(255, 255, 255, 0.15)\",\n                zeroLineColor: \"rgba(33, 37, 41, 0)\",\n                zeroLineBorderDash: [2],\n                zeroLineBorderDashOffset: [2]\n              }\n            }]\n          }\n        }\n      };\n      let ctx = document.getElementById(\"line-chart\");\n      ctx = ctx.getContext(\"2d\");\n      new Chart(ctx, config);\n    }\n\n  }\n\n  StatisticComponent.ɵfac = function StatisticComponent_Factory(t) {\n    return new (t || StatisticComponent)();\n  };\n\n  StatisticComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StatisticComponent,\n    selectors: [[\"app-statistic\"]],\n    decls: 11,\n    vars: 0,\n    consts: [[1, \"relative\", \"flex\", \"flex-col\", \"min-w-0\", \"break-words\", \"w-full\", \"mb-6\", \"shadow-lg\", \"rounded\", \"bg-blueGray-700\"], [1, \"rounded-t\", \"mb-0\", \"px-4\", \"py-3\", \"bg-transparent\"], [1, \"flex\", \"flex-wrap\", \"items-center\"], [1, \"relative\", \"w-full\", \"max-w-full\", \"flex-grow\", \"flex-1\"], [1, \"uppercase\", \"text-blueGray-100\", \"mb-1\", \"text-xs\", \"font-semibold\"], [1, \"text-white\", \"text-xl\", \"font-semibold\"], [1, \"p-4\", \"flex-auto\"], [1, \"relative\", 2, \"height\", \"350px\"], [\"id\", \"line-chart\"]],\n    template: function StatisticComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"h6\", 4);\n        i0.ɵɵtext(5, \" statistics \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"h2\", 5);\n        i0.ɵɵtext(7, \"Reservations value\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelement(10, \"canvas\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\"]\n  });\n  return StatisticComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}