{"ast":null,"code":"import { Reservation } from '../reservation';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/reservation.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nexport let ResCreateComponent = /*#__PURE__*/(() => {\n  class ResCreateComponent {\n    constructor(reservationservice, router) {\n      this.reservationservice = reservationservice;\n      this.router = router;\n      this.reservation = new Reservation();\n      this._color = \"light\";\n    }\n\n    ngOnInit() {\n      this.dateControle();\n      this.CheckoutControle();\n    }\n\n    onSubmit() {\n      console.log(this.reservation);\n      this.saveReservation();\n    }\n\n    saveReservation() {\n      this.reservationservice.createReservation(this.reservation).subscribe(data => {\n        console.log(this.reservation);\n        console.log(data);\n        this.gotoReservation();\n      }), error => console.log(error);\n    }\n\n    gotoReservation() {\n      this.router.navigate(['/admin/res-list']);\n    }\n\n    dateControle() {\n      const dateInput = document.getElementById('checkin');\n      const today = new Date();\n      const tomorrow = new Date(today);\n      tomorrow.setDate(tomorrow.getDate() + 1);\n      const minDate = tomorrow.toISOString().slice(0, 10);\n      dateInput.setAttribute('min', minDate);\n    }\n\n    CheckoutControle() {\n      const checkIn = document.getElementById('checkin');\n      const checkOut = document.getElementById('checkout');\n      checkIn.addEventListener('change', () => {\n        const inputElement = event.target;\n        const selectedDate = new Date(inputElement.value); // Add one day to selected date\n\n        selectedDate.setDate(selectedDate.getDate() + 1); // Format date as yyyy-mm-dd string\n\n        const maxDate = selectedDate.toISOString().slice(0, 10); // Set max attribute of check-out input\n\n        checkOut.setAttribute('min', maxDate);\n      });\n      /* const today = new Date();\r\n       const tomorrow = new Date(today);\r\n       tomorrow.setDate( + 2);\r\n       const minDate = tomorrow.toISOString().slice(0, 10);\r\n       checkIn.setAttribute('min', minDate);*/\n    }\n\n    get color() {\n      return this._color;\n    }\n\n    set color(color) {\n      this._color = color !== \"light\" && color !== \"dark\" ? \"light\" : color;\n    }\n\n  }\n\n  ResCreateComponent.ɵfac = function ResCreateComponent_Factory(t) {\n    return new (t || ResCreateComponent)(i0.ɵɵdirectiveInject(i1.ReservationService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  ResCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ResCreateComponent,\n    selectors: [[\"app-res-create\"]],\n    inputs: {\n      color: \"color\"\n    },\n    decls: 34,\n    vars: 7,\n    consts: [[1, \"relative\", \"flex\", \"flex-col\", \"min-w-0\", \"break-words\", \"w-full\", \"mb-6\", \"shadow-lg\", \"rounded\", 3, \"ngClass\"], [1, \"rounded-t\", \"mb-0\", \"px-4\", \"py-3\", \"border-0\"], [1, \"flex\", \"flex-wrap\", \"items-center\"], [1, \"relative\", \"w-full\", \"px-4\", \"max-w-full\", \"flex-grow\", \"flex-1\"], [1, \"font-semibold\", \"text-lg\", 3, \"ngClass\"], [1, \"card-category\"], [1, \"block\", \"w-full\", \"overflow-x-auto\"], [1, \"table-responsive\", \"p-4\"], [3, \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"form-group\", \"mb-4\"], [1, \"input-label\"], [\"type\", \"date\", \"id\", \"checkin\", \"min\", \"\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"id\", \"checkout\", \"min\", \"\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"specialrequest\", 1, \"input-label\"], [\"type\", \"textarea\", \"id\", \"specialrequest\", \"name\", \"specialrequests\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"Status\", 1, \"input-label\"], [\"id\", \"status\", \"name\", \"status\", \"required\", \"\", 1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"Confirmed\"], [\"value\", \"Cancelled\"], [1, \"form-group\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"]],\n    template: function ResCreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"h3\", 4);\n        i0.ɵɵtext(5, \" Reservations \");\n        i0.ɵɵelement(6, \"p\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵelementStart(8, \"div\", 7);\n        i0.ɵɵelementStart(9, \"form\", 8, 9);\n        i0.ɵɵlistener(\"ngSubmit\", function ResCreateComponent_Template_form_ngSubmit_9_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(11, \"div\", 10);\n        i0.ɵɵelementStart(12, \"label\", 11);\n        i0.ɵɵtext(13, \"Check In\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function ResCreateComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.reservation.checkin = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 10);\n        i0.ɵɵelementStart(16, \"label\", 11);\n        i0.ɵɵtext(17, \"Check Out\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"input\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function ResCreateComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.reservation.checkout = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 10);\n        i0.ɵɵelementStart(20, \"label\", 14);\n        i0.ɵɵtext(21, \"Special Requests\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"input\", 15);\n        i0.ɵɵlistener(\"ngModelChange\", function ResCreateComponent_Template_input_ngModelChange_22_listener($event) {\n          return ctx.reservation.specialrequests = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 10);\n        i0.ɵɵelementStart(24, \"label\", 16);\n        i0.ɵɵtext(25, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"select\", 17);\n        i0.ɵɵlistener(\"ngModelChange\", function ResCreateComponent_Template_select_ngModelChange_26_listener($event) {\n          return ctx.reservation.status = $event;\n        });\n        i0.ɵɵelementStart(27, \"option\", 18);\n        i0.ɵɵtext(28, \"Confirmed\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"option\", 19);\n        i0.ɵɵtext(30, \"Cancelled\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 20);\n        i0.ɵɵelementStart(32, \"button\", 21);\n        i0.ɵɵtext(33, \"Add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(10);\n\n        i0.ɵɵproperty(\"ngClass\", ctx.color === \"light\" ? \"bg-white\" : \"bg-red-900 text-white\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", ctx.color === \"light\" ? \"text-blueGray-700\" : \"text-white\");\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.reservation.checkin);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.reservation.checkout);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.reservation.specialrequests);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.reservation.status);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"disabled\", _r0.invalid);\n      }\n    },\n    directives: [i3.NgClass, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i4.DefaultValueAccessor, i4.RequiredValidator, i4.NgControlStatus, i4.NgModel, i4.SelectControlValueAccessor, i4.NgSelectOption, i4.ɵNgSelectMultipleOption],\n    styles: [\"\"]\n  });\n  return ResCreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}