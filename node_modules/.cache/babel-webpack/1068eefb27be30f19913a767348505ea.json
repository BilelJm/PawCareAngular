{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { forwardRef, Component, ChangeDetectionStrategy, NgModule, Directive, ContentChildren, ContentChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { setValue, FormBase, ComponentBase, ComponentMixins, ComplexBase, ArrayBase, Template } from '@syncfusion/ej2-angular-base';\nimport { Calendar, Islamic, DatePicker, MaskedDateTime, TimePicker, DateRangePicker, DateTimePicker } from '@syncfusion/ej2-calendars';\nexport * from '@syncfusion/ej2-calendars';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"start\"];\nconst _c1 = [\"end\"];\nvar CalendarComponent_1;\nconst inputs$4 = ['calendarMode', 'cssClass', 'dayHeaderFormat', 'depth', 'enablePersistence', 'enableRtl', 'enabled', 'firstDayOfWeek', 'isMultiSelection', 'keyConfigs', 'locale', 'max', 'min', 'serverTimezoneOffset', 'showTodayButton', 'start', 'value', 'values', 'weekNumber', 'weekRule'];\nconst outputs$5 = ['focus', 'blur', 'change', 'created', 'destroyed', 'navigated', 'renderDayCell', 'valueChange', 'valuesChange'];\nconst twoWays$4 = ['value', 'values'];\n/**\r\n * Represents the Essential JS 2 Angular Calendar Component.\r\n * ```html\r\n * <ejs-calendar [value]='date'></ejs-calendar>\r\n * ```\r\n */\n\nlet CalendarComponent = CalendarComponent_1 = class CalendarComponent extends Calendar {\n  constructor(ngEle, srenderer, viewContainerRef, injector) {\n    super();\n    this.ngEle = ngEle;\n    this.srenderer = srenderer;\n    this.viewContainerRef = viewContainerRef;\n    this.injector = injector;\n    this.element = this.ngEle.nativeElement;\n    this.injectedModules = this.injectedModules || [];\n\n    try {\n      let mod = this.injector.get('CalendarsIslamic');\n\n      if (this.injectedModules.indexOf(mod) === -1) {\n        this.injectedModules.push(mod);\n      }\n    } catch (_a) {}\n\n    this.registerEvents(outputs$5);\n    this.addTwoWay.call(this, twoWays$4);\n    setValue('currentInstance', this, this.viewContainerRef);\n    this.formContext = new FormBase();\n    this.formCompContext = new ComponentBase();\n  }\n\n  registerOnChange(registerFunction) {}\n\n  registerOnTouched(registerFunction) {}\n\n  writeValue(value) {}\n\n  setDisabledState(disabled) {}\n\n  ngOnInit() {\n    this.formCompContext.ngOnInit(this);\n  }\n\n  ngAfterViewInit() {\n    this.formContext.ngAfterViewInit(this);\n  }\n\n  ngOnDestroy() {\n    this.formCompContext.ngOnDestroy(this);\n  }\n\n  ngAfterContentChecked() {\n    this.formCompContext.ngAfterContentChecked(this);\n  }\n\n};\n\nCalendarComponent.ɵfac = function CalendarComponent_Factory(t) {\n  return new (t || CalendarComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Injector));\n};\n\nCalendarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CalendarComponent,\n  selectors: [[\"ejs-calendar\"]],\n  inputs: {\n    calendarMode: \"calendarMode\",\n    cssClass: \"cssClass\",\n    dayHeaderFormat: \"dayHeaderFormat\",\n    depth: \"depth\",\n    enablePersistence: \"enablePersistence\",\n    enableRtl: \"enableRtl\",\n    enabled: \"enabled\",\n    firstDayOfWeek: \"firstDayOfWeek\",\n    isMultiSelection: \"isMultiSelection\",\n    keyConfigs: \"keyConfigs\",\n    locale: \"locale\",\n    max: \"max\",\n    min: \"min\",\n    serverTimezoneOffset: \"serverTimezoneOffset\",\n    showTodayButton: \"showTodayButton\",\n    start: \"start\",\n    value: \"value\",\n    values: \"values\",\n    weekNumber: \"weekNumber\",\n    weekRule: \"weekRule\"\n  },\n  outputs: {\n    focus: \"focus\",\n    blur: \"blur\",\n    change: \"change\",\n    created: \"created\",\n    destroyed: \"destroyed\",\n    navigated: \"navigated\",\n    renderDayCell: \"renderDayCell\",\n    valueChange: \"valueChange\",\n    valuesChange: \"valuesChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CalendarComponent_1),\n    multi: true\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function CalendarComponent_Template(rf, ctx) {},\n  encapsulation: 2,\n  changeDetection: 0\n});\nCalendarComponent = CalendarComponent_1 = __decorate([ComponentMixins([ComponentBase, FormBase])], CalendarComponent);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * NgModule definition for the Calendar component.\r\n */\n\n\nlet CalendarModule = /*#__PURE__*/(() => {\n  class CalendarModule {}\n\n  CalendarModule.ɵfac = function CalendarModule_Factory(t) {\n    return new (t || CalendarModule)();\n  };\n\n  CalendarModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: CalendarModule\n  });\n  CalendarModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return CalendarModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst IslamicService = {\n  provide: 'CalendarsIslamic',\n  useValue: Islamic\n};\n/**\r\n * NgModule definition for the Calendar component with providers.\r\n */\n\nlet CalendarAllModule = /*#__PURE__*/(() => {\n  class CalendarAllModule {}\n\n  CalendarAllModule.ɵfac = function CalendarAllModule_Factory(t) {\n    return new (t || CalendarAllModule)();\n  };\n\n  CalendarAllModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: CalendarAllModule\n  });\n  CalendarAllModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [IslamicService],\n    imports: [[CommonModule, CalendarModule], CalendarModule]\n  });\n  return CalendarAllModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar DatePickerComponent_1;\nconst inputs$3 = ['allowEdit', 'calendarMode', 'cssClass', 'dayHeaderFormat', 'depth', 'enableMask', 'enablePersistence', 'enableRtl', 'enabled', 'firstDayOfWeek', 'floatLabelType', 'format', 'htmlAttributes', 'isMultiSelection', 'keyConfigs', 'locale', 'maskPlaceholder', 'max', 'min', 'openOnFocus', 'placeholder', 'readonly', 'serverTimezoneOffset', 'showClearButton', 'showTodayButton', 'start', 'strictMode', 'value', 'values', 'weekNumber', 'weekRule', 'width', 'zIndex'];\nconst outputs$4 = ['blur', 'change', 'cleared', 'close', 'created', 'destroyed', 'focus', 'navigated', 'open', 'renderDayCell', 'valueChange'];\nconst twoWays$3 = ['value'];\n/**\r\n * Represents the Essential JS 2 Angular DatePicker Component.\r\n * ```html\r\n * <ejs-datepicker [value]='date'></ejs-datepicker>\r\n * ```\r\n */\n\nlet DatePickerComponent = DatePickerComponent_1 = class DatePickerComponent extends DatePicker {\n  constructor(ngEle, srenderer, viewContainerRef, injector) {\n    super();\n    this.ngEle = ngEle;\n    this.srenderer = srenderer;\n    this.viewContainerRef = viewContainerRef;\n    this.injector = injector;\n    this.skipFromEvent = true;\n    this.element = this.ngEle.nativeElement;\n    this.injectedModules = this.injectedModules || [];\n\n    try {\n      let mod = this.injector.get('CalendarsIslamic');\n\n      if (this.injectedModules.indexOf(mod) === -1) {\n        this.injectedModules.push(mod);\n      }\n    } catch (_a) {}\n\n    try {\n      let mod = this.injector.get('CalendarsMaskedDateTime');\n\n      if (this.injectedModules.indexOf(mod) === -1) {\n        this.injectedModules.push(mod);\n      }\n    } catch (_b) {}\n\n    this.registerEvents(outputs$4);\n    this.addTwoWay.call(this, twoWays$3);\n    setValue('currentInstance', this, this.viewContainerRef);\n    this.formContext = new FormBase();\n    this.formCompContext = new ComponentBase();\n  }\n\n  registerOnChange(registerFunction) {}\n\n  registerOnTouched(registerFunction) {}\n\n  writeValue(value) {}\n\n  setDisabledState(disabled) {}\n\n  ngOnInit() {\n    this.formCompContext.ngOnInit(this);\n  }\n\n  ngAfterViewInit() {\n    this.formContext.ngAfterViewInit(this);\n  }\n\n  ngOnDestroy() {\n    this.formCompContext.ngOnDestroy(this);\n  }\n\n  ngAfterContentChecked() {\n    this.formCompContext.ngAfterContentChecked(this);\n  }\n\n};\n\nDatePickerComponent.ɵfac = function DatePickerComponent_Factory(t) {\n  return new (t || DatePickerComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Injector));\n};\n\nDatePickerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DatePickerComponent,\n  selectors: [[\"ejs-datepicker\"]],\n  inputs: {\n    allowEdit: \"allowEdit\",\n    calendarMode: \"calendarMode\",\n    cssClass: \"cssClass\",\n    dayHeaderFormat: \"dayHeaderFormat\",\n    depth: \"depth\",\n    enableMask: \"enableMask\",\n    enablePersistence: \"enablePersistence\",\n    enableRtl: \"enableRtl\",\n    enabled: \"enabled\",\n    firstDayOfWeek: \"firstDayOfWeek\",\n    floatLabelType: \"floatLabelType\",\n    format: \"format\",\n    htmlAttributes: \"htmlAttributes\",\n    isMultiSelection: \"isMultiSelection\",\n    keyConfigs: \"keyConfigs\",\n    locale: \"locale\",\n    maskPlaceholder: \"maskPlaceholder\",\n    max: \"max\",\n    min: \"min\",\n    openOnFocus: \"openOnFocus\",\n    placeholder: \"placeholder\",\n    readonly: \"readonly\",\n    serverTimezoneOffset: \"serverTimezoneOffset\",\n    showClearButton: \"showClearButton\",\n    showTodayButton: \"showTodayButton\",\n    start: \"start\",\n    strictMode: \"strictMode\",\n    value: \"value\",\n    values: \"values\",\n    weekNumber: \"weekNumber\",\n    weekRule: \"weekRule\",\n    width: \"width\",\n    zIndex: \"zIndex\"\n  },\n  outputs: {\n    blur: \"blur\",\n    change: \"change\",\n    cleared: \"cleared\",\n    close: \"close\",\n    created: \"created\",\n    destroyed: \"destroyed\",\n    focus: \"focus\",\n    navigated: \"navigated\",\n    open: \"open\",\n    renderDayCell: \"renderDayCell\",\n    valueChange: \"valueChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DatePickerComponent_1),\n    multi: true\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function DatePickerComponent_Template(rf, ctx) {},\n  encapsulation: 2,\n  changeDetection: 0\n});\nDatePickerComponent = DatePickerComponent_1 = __decorate([ComponentMixins([ComponentBase, FormBase])], DatePickerComponent);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * NgModule definition for the DatePicker component.\r\n */\n\n\nlet DatePickerModule = /*#__PURE__*/(() => {\n  class DatePickerModule {}\n\n  DatePickerModule.ɵfac = function DatePickerModule_Factory(t) {\n    return new (t || DatePickerModule)();\n  };\n\n  DatePickerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: DatePickerModule\n  });\n  DatePickerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return DatePickerModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst MaskedDateTimeService = {\n  provide: 'CalendarsMaskedDateTime',\n  useValue: MaskedDateTime\n};\n/**\r\n * NgModule definition for the DatePicker component with providers.\r\n */\n\nlet DatePickerAllModule = /*#__PURE__*/(() => {\n  class DatePickerAllModule {}\n\n  DatePickerAllModule.ɵfac = function DatePickerAllModule_Factory(t) {\n    return new (t || DatePickerAllModule)();\n  };\n\n  DatePickerAllModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: DatePickerAllModule\n  });\n  DatePickerAllModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [MaskedDateTimeService],\n    imports: [[CommonModule, DatePickerModule], DatePickerModule]\n  });\n  return DatePickerAllModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar TimePickerComponent_1;\nconst inputs$2 = ['allowEdit', 'cssClass', 'enableMask', 'enablePersistence', 'enableRtl', 'enabled', 'floatLabelType', 'format', 'htmlAttributes', 'keyConfigs', 'locale', 'maskPlaceholder', 'max', 'min', 'openOnFocus', 'placeholder', 'readonly', 'scrollTo', 'showClearButton', 'step', 'strictMode', 'value', 'width', 'zIndex'];\nconst outputs$3 = ['blur', 'change', 'cleared', 'close', 'created', 'destroyed', 'focus', 'itemRender', 'open', 'valueChange'];\nconst twoWays$2 = ['value'];\n/**\r\n * Represents the Essential JS 2 Angular TimePicker Component.\r\n * ```html\r\n * <ejs-timepicker [value]='dateTime'></ejs-timepicker>\r\n * ```\r\n */\n\nlet TimePickerComponent = TimePickerComponent_1 = class TimePickerComponent extends TimePicker {\n  constructor(ngEle, srenderer, viewContainerRef, injector) {\n    super();\n    this.ngEle = ngEle;\n    this.srenderer = srenderer;\n    this.viewContainerRef = viewContainerRef;\n    this.injector = injector;\n    this.skipFromEvent = true;\n    this.element = this.ngEle.nativeElement;\n    this.injectedModules = this.injectedModules || [];\n\n    try {\n      let mod = this.injector.get('CalendarsMaskedDateTime');\n\n      if (this.injectedModules.indexOf(mod) === -1) {\n        this.injectedModules.push(mod);\n      }\n    } catch (_a) {}\n\n    this.registerEvents(outputs$3);\n    this.addTwoWay.call(this, twoWays$2);\n    setValue('currentInstance', this, this.viewContainerRef);\n    this.formContext = new FormBase();\n    this.formCompContext = new ComponentBase();\n  }\n\n  registerOnChange(registerFunction) {}\n\n  registerOnTouched(registerFunction) {}\n\n  writeValue(value) {}\n\n  setDisabledState(disabled) {}\n\n  ngOnInit() {\n    this.formCompContext.ngOnInit(this);\n  }\n\n  ngAfterViewInit() {\n    this.formContext.ngAfterViewInit(this);\n  }\n\n  ngOnDestroy() {\n    this.formCompContext.ngOnDestroy(this);\n  }\n\n  ngAfterContentChecked() {\n    this.formCompContext.ngAfterContentChecked(this);\n  }\n\n};\n\nTimePickerComponent.ɵfac = function TimePickerComponent_Factory(t) {\n  return new (t || TimePickerComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Injector));\n};\n\nTimePickerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TimePickerComponent,\n  selectors: [[\"ejs-timepicker\"]],\n  inputs: {\n    allowEdit: \"allowEdit\",\n    cssClass: \"cssClass\",\n    enableMask: \"enableMask\",\n    enablePersistence: \"enablePersistence\",\n    enableRtl: \"enableRtl\",\n    enabled: \"enabled\",\n    floatLabelType: \"floatLabelType\",\n    format: \"format\",\n    htmlAttributes: \"htmlAttributes\",\n    keyConfigs: \"keyConfigs\",\n    locale: \"locale\",\n    maskPlaceholder: \"maskPlaceholder\",\n    max: \"max\",\n    min: \"min\",\n    openOnFocus: \"openOnFocus\",\n    placeholder: \"placeholder\",\n    readonly: \"readonly\",\n    scrollTo: \"scrollTo\",\n    showClearButton: \"showClearButton\",\n    step: \"step\",\n    strictMode: \"strictMode\",\n    value: \"value\",\n    width: \"width\",\n    zIndex: \"zIndex\"\n  },\n  outputs: {\n    blur: \"blur\",\n    change: \"change\",\n    cleared: \"cleared\",\n    close: \"close\",\n    created: \"created\",\n    destroyed: \"destroyed\",\n    focus: \"focus\",\n    itemRender: \"itemRender\",\n    open: \"open\",\n    valueChange: \"valueChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TimePickerComponent_1),\n    multi: true\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function TimePickerComponent_Template(rf, ctx) {},\n  encapsulation: 2,\n  changeDetection: 0\n});\nTimePickerComponent = TimePickerComponent_1 = __decorate([ComponentMixins([ComponentBase, FormBase])], TimePickerComponent);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * NgModule definition for the TimePicker component.\r\n */\n\n\nlet TimePickerModule = /*#__PURE__*/(() => {\n  class TimePickerModule {}\n\n  TimePickerModule.ɵfac = function TimePickerModule_Factory(t) {\n    return new (t || TimePickerModule)();\n  };\n\n  TimePickerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TimePickerModule\n  });\n  TimePickerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return TimePickerModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * NgModule definition for the TimePicker component with providers.\r\n */\n\n\nlet TimePickerAllModule = /*#__PURE__*/(() => {\n  class TimePickerAllModule {}\n\n  TimePickerAllModule.ɵfac = function TimePickerAllModule_Factory(t) {\n    return new (t || TimePickerAllModule)();\n  };\n\n  TimePickerAllModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TimePickerAllModule\n  });\n  TimePickerAllModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [],\n    imports: [[CommonModule, TimePickerModule], TimePickerModule]\n  });\n  return TimePickerAllModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet input = ['end', 'label', 'start'];\nlet outputs$2 = [];\n/**\r\n * 'e-presets' directive represent a presets of angular daterangepicker\r\n * It must be contained in a daterangepicker component(`ej-daterangepicker`).\r\n * ```html\r\n * <ejs-daterangepicker id='range'>\r\n *   <e-presets>\r\n *    <e-preset label='Last Week' [start]=new Date('06/07/2018') [end]= new Date('06/01/2018')></e-preset>\r\n *    <e-preset label='Last Month' [start]=new Date('06/07/2018') [end]= new Date('05/07/2018')></e-preset>\r\n *   </e-presets>\r\n * </ejs-daterangepicker>\r\n * ```\r\n */\n\nlet PresetDirective = /*#__PURE__*/(() => {\n  class PresetDirective extends ComplexBase {\n    constructor(viewContainerRef) {\n      super();\n      this.viewContainerRef = viewContainerRef;\n      setValue('currentInstance', this, this.viewContainerRef);\n      this.registerEvents(outputs$2);\n      this.directivePropList = input;\n    }\n\n  }\n\n  PresetDirective.ɵfac = function PresetDirective_Factory(t) {\n    return new (t || PresetDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n\n  PresetDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: PresetDirective,\n    selectors: [[\"e-preset\"]],\n    inputs: {\n      end: \"end\",\n      label: \"label\",\n      start: \"start\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return PresetDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * Preset Array Directive\r\n * @private\r\n */\n\n\nlet PresetsDirective = /*#__PURE__*/(() => {\n  class PresetsDirective extends ArrayBase {\n    constructor() {\n      super('presets');\n    }\n\n  }\n\n  PresetsDirective.ɵfac = function PresetsDirective_Factory(t) {\n    return new (t || PresetsDirective)();\n  };\n\n  PresetsDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: PresetsDirective,\n    selectors: [[\"e-presets\"]],\n    contentQueries: function PresetsDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, PresetDirective, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.children = _t);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return PresetsDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar DateRangePickerComponent_1;\nconst inputs$1 = ['allowEdit', 'calendarMode', 'cssClass', 'dayHeaderFormat', 'depth', 'enablePersistence', 'enableRtl', 'enabled', 'endDate', 'firstDayOfWeek', 'floatLabelType', 'format', 'htmlAttributes', 'keyConfigs', 'locale', 'max', 'maxDays', 'min', 'minDays', 'openOnFocus', 'placeholder', 'presets', 'readonly', 'separator', 'serverTimezoneOffset', 'showClearButton', 'start', 'startDate', 'strictMode', 'value', 'weekNumber', 'weekRule', 'width', 'zIndex'];\nconst outputs$1 = ['blur', 'change', 'cleared', 'close', 'created', 'destroyed', 'focus', 'navigated', 'open', 'renderDayCell', 'select', 'startDateChange', 'endDateChange', 'valueChange'];\nconst twoWays$1 = ['startDate', 'endDate', 'value'];\n/**\r\n * Represents the Essential JS 2 Angular DateRangePicker Component.\r\n * ```html\r\n * <ejs-daterangepicker [startDate]='date' [endDate]='date'></ejs-daterangepicker>\r\n * ```\r\n */\n\nlet DateRangePickerComponent = DateRangePickerComponent_1 = class DateRangePickerComponent extends DateRangePicker {\n  constructor(ngEle, srenderer, viewContainerRef, injector) {\n    super();\n    this.ngEle = ngEle;\n    this.srenderer = srenderer;\n    this.viewContainerRef = viewContainerRef;\n    this.injector = injector;\n    this.tags = ['presets'];\n    this.skipFromEvent = true;\n    this.element = this.ngEle.nativeElement;\n    this.injectedModules = this.injectedModules || [];\n    this.registerEvents(outputs$1);\n    this.addTwoWay.call(this, twoWays$1);\n    setValue('currentInstance', this, this.viewContainerRef);\n    this.formContext = new FormBase();\n    this.formCompContext = new ComponentBase();\n  }\n\n  registerOnChange(registerFunction) {}\n\n  registerOnTouched(registerFunction) {}\n\n  writeValue(value) {}\n\n  setDisabledState(disabled) {}\n\n  ngOnInit() {\n    this.formCompContext.ngOnInit(this);\n  }\n\n  ngAfterViewInit() {\n    this.formContext.ngAfterViewInit(this);\n  }\n\n  ngOnDestroy() {\n    this.formCompContext.ngOnDestroy(this);\n  }\n\n  ngAfterContentChecked() {\n    this.tagObjects[0].instance = this.childPresets;\n    this.formCompContext.ngAfterContentChecked(this);\n  }\n\n};\n\nDateRangePickerComponent.ɵfac = function DateRangePickerComponent_Factory(t) {\n  return new (t || DateRangePickerComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Injector));\n};\n\nDateRangePickerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DateRangePickerComponent,\n  selectors: [[\"ejs-daterangepicker\"]],\n  contentQueries: function DateRangePickerComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, _c0, 5);\n      i0.ɵɵcontentQuery(dirIndex, _c1, 5);\n      i0.ɵɵcontentQuery(dirIndex, PresetsDirective, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.start = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.end = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.childPresets = _t.first);\n    }\n  },\n  inputs: {\n    allowEdit: \"allowEdit\",\n    calendarMode: \"calendarMode\",\n    cssClass: \"cssClass\",\n    dayHeaderFormat: \"dayHeaderFormat\",\n    depth: \"depth\",\n    enablePersistence: \"enablePersistence\",\n    enableRtl: \"enableRtl\",\n    enabled: \"enabled\",\n    endDate: \"endDate\",\n    firstDayOfWeek: \"firstDayOfWeek\",\n    floatLabelType: \"floatLabelType\",\n    format: \"format\",\n    htmlAttributes: \"htmlAttributes\",\n    keyConfigs: \"keyConfigs\",\n    locale: \"locale\",\n    max: \"max\",\n    maxDays: \"maxDays\",\n    min: \"min\",\n    minDays: \"minDays\",\n    openOnFocus: \"openOnFocus\",\n    placeholder: \"placeholder\",\n    presets: \"presets\",\n    readonly: \"readonly\",\n    separator: \"separator\",\n    serverTimezoneOffset: \"serverTimezoneOffset\",\n    showClearButton: \"showClearButton\",\n    start: \"start\",\n    startDate: \"startDate\",\n    strictMode: \"strictMode\",\n    value: \"value\",\n    weekNumber: \"weekNumber\",\n    weekRule: \"weekRule\",\n    width: \"width\",\n    zIndex: \"zIndex\"\n  },\n  outputs: {\n    blur: \"blur\",\n    change: \"change\",\n    cleared: \"cleared\",\n    close: \"close\",\n    created: \"created\",\n    destroyed: \"destroyed\",\n    focus: \"focus\",\n    navigated: \"navigated\",\n    open: \"open\",\n    renderDayCell: \"renderDayCell\",\n    select: \"select\",\n    startDateChange: \"startDateChange\",\n    endDateChange: \"endDateChange\",\n    valueChange: \"valueChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DateRangePickerComponent_1),\n    multi: true\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function DateRangePickerComponent_Template(rf, ctx) {},\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n__decorate([Template()], DateRangePickerComponent.prototype, \"start\", void 0);\n\n__decorate([Template()], DateRangePickerComponent.prototype, \"end\", void 0);\n\nDateRangePickerComponent = DateRangePickerComponent_1 = __decorate([ComponentMixins([ComponentBase, FormBase])], DateRangePickerComponent);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * NgModule definition for the DateRangePicker component.\r\n */\n\n\nlet DateRangePickerModule = /*#__PURE__*/(() => {\n  class DateRangePickerModule {}\n\n  DateRangePickerModule.ɵfac = function DateRangePickerModule_Factory(t) {\n    return new (t || DateRangePickerModule)();\n  };\n\n  DateRangePickerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: DateRangePickerModule\n  });\n  DateRangePickerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return DateRangePickerModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * NgModule definition for the DateRangePicker component with providers.\r\n */\n\n\nlet DateRangePickerAllModule = /*#__PURE__*/(() => {\n  class DateRangePickerAllModule {}\n\n  DateRangePickerAllModule.ɵfac = function DateRangePickerAllModule_Factory(t) {\n    return new (t || DateRangePickerAllModule)();\n  };\n\n  DateRangePickerAllModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: DateRangePickerAllModule\n  });\n  DateRangePickerAllModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [],\n    imports: [[CommonModule, DateRangePickerModule], DateRangePickerModule]\n  });\n  return DateRangePickerAllModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar DateTimePickerComponent_1;\nconst inputs = ['allowEdit', 'calendarMode', 'cssClass', 'dayHeaderFormat', 'depth', 'enableMask', 'enablePersistence', 'enableRtl', 'enabled', 'firstDayOfWeek', 'floatLabelType', 'format', 'htmlAttributes', 'isMultiSelection', 'keyConfigs', 'locale', 'maskPlaceholder', 'max', 'min', 'openOnFocus', 'placeholder', 'readonly', 'scrollTo', 'serverTimezoneOffset', 'showClearButton', 'showTodayButton', 'start', 'step', 'strictMode', 'timeFormat', 'value', 'values', 'weekNumber', 'weekRule', 'width', 'zIndex'];\nconst outputs = ['blur', 'change', 'cleared', 'close', 'created', 'destroyed', 'focus', 'navigated', 'open', 'renderDayCell', 'valueChange'];\nconst twoWays = ['value'];\n/**\r\n * Represents the Essential JS 2 Angular DateTimePicker Component.\r\n * ```html\r\n * <ejs-datetimepicker [value]='dateTime'></ejs-datetimepicker>\r\n * ```\r\n */\n\nlet DateTimePickerComponent = DateTimePickerComponent_1 = class DateTimePickerComponent extends DateTimePicker {\n  constructor(ngEle, srenderer, viewContainerRef, injector) {\n    super();\n    this.ngEle = ngEle;\n    this.srenderer = srenderer;\n    this.viewContainerRef = viewContainerRef;\n    this.injector = injector;\n    this.skipFromEvent = true;\n    this.element = this.ngEle.nativeElement;\n    this.injectedModules = this.injectedModules || [];\n\n    try {\n      let mod = this.injector.get('CalendarsIslamic');\n\n      if (this.injectedModules.indexOf(mod) === -1) {\n        this.injectedModules.push(mod);\n      }\n    } catch (_a) {}\n\n    try {\n      let mod = this.injector.get('CalendarsMaskedDateTime');\n\n      if (this.injectedModules.indexOf(mod) === -1) {\n        this.injectedModules.push(mod);\n      }\n    } catch (_b) {}\n\n    this.registerEvents(outputs);\n    this.addTwoWay.call(this, twoWays);\n    setValue('currentInstance', this, this.viewContainerRef);\n    this.formContext = new FormBase();\n    this.formCompContext = new ComponentBase();\n  }\n\n  registerOnChange(registerFunction) {}\n\n  registerOnTouched(registerFunction) {}\n\n  writeValue(value) {}\n\n  setDisabledState(disabled) {}\n\n  ngOnInit() {\n    this.formCompContext.ngOnInit(this);\n  }\n\n  ngAfterViewInit() {\n    this.formContext.ngAfterViewInit(this);\n  }\n\n  ngOnDestroy() {\n    this.formCompContext.ngOnDestroy(this);\n  }\n\n  ngAfterContentChecked() {\n    this.formCompContext.ngAfterContentChecked(this);\n  }\n\n};\n\nDateTimePickerComponent.ɵfac = function DateTimePickerComponent_Factory(t) {\n  return new (t || DateTimePickerComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Injector));\n};\n\nDateTimePickerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DateTimePickerComponent,\n  selectors: [[\"ejs-datetimepicker\"]],\n  inputs: {\n    allowEdit: \"allowEdit\",\n    calendarMode: \"calendarMode\",\n    cssClass: \"cssClass\",\n    dayHeaderFormat: \"dayHeaderFormat\",\n    depth: \"depth\",\n    enableMask: \"enableMask\",\n    enablePersistence: \"enablePersistence\",\n    enableRtl: \"enableRtl\",\n    enabled: \"enabled\",\n    firstDayOfWeek: \"firstDayOfWeek\",\n    floatLabelType: \"floatLabelType\",\n    format: \"format\",\n    htmlAttributes: \"htmlAttributes\",\n    isMultiSelection: \"isMultiSelection\",\n    keyConfigs: \"keyConfigs\",\n    locale: \"locale\",\n    maskPlaceholder: \"maskPlaceholder\",\n    max: \"max\",\n    min: \"min\",\n    openOnFocus: \"openOnFocus\",\n    placeholder: \"placeholder\",\n    readonly: \"readonly\",\n    scrollTo: \"scrollTo\",\n    serverTimezoneOffset: \"serverTimezoneOffset\",\n    showClearButton: \"showClearButton\",\n    showTodayButton: \"showTodayButton\",\n    start: \"start\",\n    step: \"step\",\n    strictMode: \"strictMode\",\n    timeFormat: \"timeFormat\",\n    value: \"value\",\n    values: \"values\",\n    weekNumber: \"weekNumber\",\n    weekRule: \"weekRule\",\n    width: \"width\",\n    zIndex: \"zIndex\"\n  },\n  outputs: {\n    blur: \"blur\",\n    change: \"change\",\n    cleared: \"cleared\",\n    close: \"close\",\n    created: \"created\",\n    destroyed: \"destroyed\",\n    focus: \"focus\",\n    navigated: \"navigated\",\n    open: \"open\",\n    renderDayCell: \"renderDayCell\",\n    valueChange: \"valueChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DateTimePickerComponent_1),\n    multi: true\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function DateTimePickerComponent_Template(rf, ctx) {},\n  encapsulation: 2,\n  changeDetection: 0\n});\nDateTimePickerComponent = DateTimePickerComponent_1 = __decorate([ComponentMixins([ComponentBase, FormBase])], DateTimePickerComponent);\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * NgModule definition for the DateTimePicker component.\r\n */\n\n\nlet DateTimePickerModule = /*#__PURE__*/(() => {\n  class DateTimePickerModule {}\n\n  DateTimePickerModule.ɵfac = function DateTimePickerModule_Factory(t) {\n    return new (t || DateTimePickerModule)();\n  };\n\n  DateTimePickerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: DateTimePickerModule\n  });\n  DateTimePickerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return DateTimePickerModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * NgModule definition for the DateTimePicker component with providers.\r\n */\n\n\nlet DateTimePickerAllModule = /*#__PURE__*/(() => {\n  class DateTimePickerAllModule {}\n\n  DateTimePickerAllModule.ɵfac = function DateTimePickerAllModule_Factory(t) {\n    return new (t || DateTimePickerAllModule)();\n  };\n\n  DateTimePickerAllModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: DateTimePickerAllModule\n  });\n  DateTimePickerAllModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [],\n    imports: [[CommonModule, DateTimePickerModule], DateTimePickerModule]\n  });\n  return DateTimePickerAllModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})(); // Mapping root file for package generation\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { CalendarAllModule, CalendarComponent, CalendarModule, DatePickerAllModule, DatePickerComponent, DatePickerModule, DateRangePickerAllModule, DateRangePickerComponent, DateRangePickerModule, DateTimePickerAllModule, DateTimePickerComponent, DateTimePickerModule, IslamicService, MaskedDateTimeService, PresetDirective, PresetsDirective, TimePickerAllModule, TimePickerComponent, TimePickerModule }; //# sourceMappingURL=syncfusion-ej2-angular-calendars.mjs.map","map":null,"metadata":{},"sourceType":"module"}