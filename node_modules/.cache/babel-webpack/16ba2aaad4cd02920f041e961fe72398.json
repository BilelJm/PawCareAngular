{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Directive, ContentChild, ContentChildren, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { ComplexBase, setValue, Template, ArrayBase, ComponentBase, ComponentMixins } from '@syncfusion/ej2-angular-base';\nimport { Schedule, Day, Week, WorkWeek, Month, Year, Agenda, MonthAgenda, TimelineViews, TimelineMonth, TimelineYear, Resize, DragAndDrop, ExcelExport, ICalendarExport, ICalendarImport, Print, RecurrenceEditor } from '@syncfusion/ej2-schedule';\nexport * from '@syncfusion/ej2-schedule';\nimport { CommonModule } from '@angular/common';\nconst _c0 = [\"dateHeaderTemplate\"];\nconst _c1 = [\"dateRangeTemplate\"];\nconst _c2 = [\"dayHeaderTemplate\"];\nconst _c3 = [\"cellHeaderTemplate\"];\nconst _c4 = [\"cellTemplate\"];\nconst _c5 = [\"eventTemplate\"];\nconst _c6 = [\"monthHeaderTemplate\"];\nconst _c7 = [\"resourceHeaderTemplate\"];\nconst _c8 = [\"headerIndentTemplate\"];\nconst _c9 = [\"timeScaleMinorSlotTemplate\"];\nconst _c10 = [\"timeScaleMajorSlotTemplate\"];\nconst _c11 = [\"groupHeaderTooltipTemplate\"];\nconst _c12 = [\"template\"];\nconst _c13 = [\"eventSettingsTooltipTemplate\"];\nconst _c14 = [\"eventSettingsTemplate\"];\nconst _c15 = [\"editorTemplate\"];\nconst _c16 = [\"quickInfoTemplatesHeader\"];\nconst _c17 = [\"quickInfoTemplatesContent\"];\nconst _c18 = [\"quickInfoTemplatesFooter\"];\nlet input$2 = ['allowVirtualScrolling', 'cellHeaderTemplate', 'cellTemplate', 'dateFormat', 'dateHeaderTemplate', 'dateRangeTemplate', 'dayHeaderTemplate', 'displayDate', 'displayName', 'endHour', 'eventTemplate', 'firstDayOfWeek', 'firstMonthOfYear', 'group', 'headerIndentTemplate', 'headerRows', 'interval', 'isSelected', 'monthHeaderTemplate', 'monthsCount', 'numberOfWeeks', 'option', 'orientation', 'readonly', 'resourceHeaderTemplate', 'showWeekNumber', 'showWeekend', 'startHour', 'timeFormat', 'timeScale', 'workDays'];\nlet outputs$4 = [];\n/**\n * `e-views` directive represent a view of the Angular Schedule.\n * It must be contained in a Schedule component(`ejs-schedule`).\n * ```html\n * <ejs-schedule>\n *   <e-views>\n *    <e-view option='day' dateFormat='dd MMM'></e-view>\n *    <e-view option='week'></e-view>\n *   </e-views>\n * </ejs-schedule>\n * ```\n */\n\nlet ViewDirective = /*#__PURE__*/(() => {\n  class ViewDirective extends ComplexBase {\n    constructor(viewContainerRef) {\n      super();\n      this.viewContainerRef = viewContainerRef;\n      setValue('currentInstance', this, this.viewContainerRef);\n      this.registerEvents(outputs$4);\n      this.directivePropList = input$2;\n    }\n\n  }\n\n  ViewDirective.ɵfac = function ViewDirective_Factory(t) {\n    return new (t || ViewDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n\n  ViewDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: ViewDirective,\n    selectors: [[\"e-view\"]],\n    contentQueries: function ViewDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c0, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c1, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c2, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c3, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c4, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c5, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c6, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c7, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c8, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c9, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c10, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c11, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dateHeaderTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dateRangeTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dayHeaderTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cellHeaderTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cellTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.eventTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.monthHeaderTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.resourceHeaderTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerIndentTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.timeScale_minorSlotTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.timeScale_majorSlotTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.group_headerTooltipTemplate = _t.first);\n      }\n    },\n    inputs: {\n      allowVirtualScrolling: \"allowVirtualScrolling\",\n      cellHeaderTemplate: \"cellHeaderTemplate\",\n      cellTemplate: \"cellTemplate\",\n      dateFormat: \"dateFormat\",\n      dateHeaderTemplate: \"dateHeaderTemplate\",\n      dateRangeTemplate: \"dateRangeTemplate\",\n      dayHeaderTemplate: \"dayHeaderTemplate\",\n      displayDate: \"displayDate\",\n      displayName: \"displayName\",\n      endHour: \"endHour\",\n      eventTemplate: \"eventTemplate\",\n      firstDayOfWeek: \"firstDayOfWeek\",\n      firstMonthOfYear: \"firstMonthOfYear\",\n      group: \"group\",\n      headerIndentTemplate: \"headerIndentTemplate\",\n      headerRows: \"headerRows\",\n      interval: \"interval\",\n      isSelected: \"isSelected\",\n      monthHeaderTemplate: \"monthHeaderTemplate\",\n      monthsCount: \"monthsCount\",\n      numberOfWeeks: \"numberOfWeeks\",\n      option: \"option\",\n      orientation: \"orientation\",\n      readonly: \"readonly\",\n      resourceHeaderTemplate: \"resourceHeaderTemplate\",\n      showWeekNumber: \"showWeekNumber\",\n      showWeekend: \"showWeekend\",\n      startHour: \"startHour\",\n      timeFormat: \"timeFormat\",\n      timeScale: \"timeScale\",\n      workDays: \"workDays\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([Template()], ViewDirective.prototype, \"dateHeaderTemplate\", void 0);\n\n  __decorate([Template()], ViewDirective.prototype, \"dateRangeTemplate\", void 0);\n\n  __decorate([Template()], ViewDirective.prototype, \"dayHeaderTemplate\", void 0);\n\n  __decorate([Template()], ViewDirective.prototype, \"cellHeaderTemplate\", void 0);\n\n  __decorate([Template()], ViewDirective.prototype, \"cellTemplate\", void 0);\n\n  __decorate([Template()], ViewDirective.prototype, \"eventTemplate\", void 0);\n\n  __decorate([Template()], ViewDirective.prototype, \"monthHeaderTemplate\", void 0);\n\n  __decorate([Template()], ViewDirective.prototype, \"resourceHeaderTemplate\", void 0);\n\n  __decorate([Template()], ViewDirective.prototype, \"headerIndentTemplate\", void 0);\n\n  __decorate([Template()], ViewDirective.prototype, \"timeScale_minorSlotTemplate\", void 0);\n\n  __decorate([Template()], ViewDirective.prototype, \"timeScale_majorSlotTemplate\", void 0);\n\n  __decorate([Template()], ViewDirective.prototype, \"group_headerTooltipTemplate\", void 0);\n\n  return ViewDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * View Array Directive\n * @private\n */\n\n\nlet ViewsDirective = /*#__PURE__*/(() => {\n  class ViewsDirective extends ArrayBase {\n    constructor() {\n      super('views');\n    }\n\n  }\n\n  ViewsDirective.ɵfac = function ViewsDirective_Factory(t) {\n    return new (t || ViewsDirective)();\n  };\n\n  ViewsDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: ViewsDirective,\n    selectors: [[\"e-views\"]],\n    contentQueries: function ViewsDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, ViewDirective, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.children = _t);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return ViewsDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet input$1 = ['allowMultiple', 'colorField', 'cssClassField', 'dataSource', 'endHourField', 'expandedField', 'field', 'groupIDField', 'idField', 'name', 'query', 'startHourField', 'textField', 'title', 'workDaysField'];\nlet outputs$3 = [];\n/**\n * `e-resources` directive represent a resources of the Angular Schedule.\n * It must be contained in a Schedule component(`ejs-schedule`).\n * ```html\n * <ejs-schedule>\n *   <e-resources>\n *    <e-resource field='RoomId' name='Rooms'></e-resource>\n *    <e-resource field='OwnerId' name='Owners'></e-resource>\n *   </e-resources>\n * </ejs-schedule>\n * ```\n */\n\nlet ResourceDirective = /*#__PURE__*/(() => {\n  class ResourceDirective extends ComplexBase {\n    constructor(viewContainerRef) {\n      super();\n      this.viewContainerRef = viewContainerRef;\n      setValue('currentInstance', this, this.viewContainerRef);\n      this.registerEvents(outputs$3);\n      this.directivePropList = input$1;\n    }\n\n  }\n\n  ResourceDirective.ɵfac = function ResourceDirective_Factory(t) {\n    return new (t || ResourceDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n\n  ResourceDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: ResourceDirective,\n    selectors: [[\"e-resource\"]],\n    inputs: {\n      allowMultiple: \"allowMultiple\",\n      colorField: \"colorField\",\n      cssClassField: \"cssClassField\",\n      dataSource: \"dataSource\",\n      endHourField: \"endHourField\",\n      expandedField: \"expandedField\",\n      field: \"field\",\n      groupIDField: \"groupIDField\",\n      idField: \"idField\",\n      name: \"name\",\n      query: \"query\",\n      startHourField: \"startHourField\",\n      textField: \"textField\",\n      title: \"title\",\n      workDaysField: \"workDaysField\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return ResourceDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Resource Array Directive\n * @private\n */\n\n\nlet ResourcesDirective = /*#__PURE__*/(() => {\n  class ResourcesDirective extends ArrayBase {\n    constructor() {\n      super('resources');\n    }\n\n  }\n\n  ResourcesDirective.ɵfac = function ResourcesDirective_Factory(t) {\n    return new (t || ResourcesDirective)();\n  };\n\n  ResourcesDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: ResourcesDirective,\n    selectors: [[\"e-resources\"]],\n    contentQueries: function ResourcesDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, ResourceDirective, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.children = _t);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return ResourcesDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet input = ['option', 'template'];\nlet outputs$2 = [];\n/**\n * `e-header-rows` directive represent a header rows of the Schedule.\n * It must be contained in a Schedule component(`ejs-schedule`).\n * ```html\n * <ejs-schedule>\n *   <e-header-rows>\n *    <e-header-row option='Week'></e-header-row>\n *    <e-header-row option='Date'></e-header-row>\n *   </e-header-rows>\n * </ejs-schedule>\n * ```\n */\n\nlet HeaderRowDirective = /*#__PURE__*/(() => {\n  class HeaderRowDirective extends ComplexBase {\n    constructor(viewContainerRef) {\n      super();\n      this.viewContainerRef = viewContainerRef;\n      setValue('currentInstance', this, this.viewContainerRef);\n      this.registerEvents(outputs$2);\n      this.directivePropList = input;\n    }\n\n  }\n\n  HeaderRowDirective.ɵfac = function HeaderRowDirective_Factory(t) {\n    return new (t || HeaderRowDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n\n  HeaderRowDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: HeaderRowDirective,\n    selectors: [[\"e-header-row\"]],\n    contentQueries: function HeaderRowDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c12, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n      }\n    },\n    inputs: {\n      option: \"option\",\n      template: \"template\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n\n  __decorate([Template()], HeaderRowDirective.prototype, \"template\", void 0);\n\n  return HeaderRowDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * HeaderRow Array Directive\n * @private\n */\n\n\nlet HeaderRowsDirective = /*#__PURE__*/(() => {\n  class HeaderRowsDirective extends ArrayBase {\n    constructor() {\n      super('headerrows');\n    }\n\n  }\n\n  HeaderRowsDirective.ɵfac = function HeaderRowsDirective_Factory(t) {\n    return new (t || HeaderRowsDirective)();\n  };\n\n  HeaderRowsDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: HeaderRowsDirective,\n    selectors: [[\"e-header-rows\"]],\n    contentQueries: function HeaderRowsDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, HeaderRowDirective, 4);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.children = _t);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature]\n  });\n  return HeaderRowsDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst inputs$1 = ['agendaDaysCount', 'allowDragAndDrop', 'allowInline', 'allowKeyboardInteraction', 'allowMultiCellSelection', 'allowMultiDrag', 'allowMultiRowSelection', 'allowResizing', 'allowSwiping', 'calendarMode', 'cellHeaderTemplate', 'cellTemplate', 'cssClass', 'currentView', 'dateFormat', 'dateHeaderTemplate', 'dateRangeTemplate', 'dayHeaderTemplate', 'editorTemplate', 'enableAdaptiveUI', 'enableAllDayScroll', 'enableHtmlSanitizer', 'enablePersistence', 'enableRecurrenceValidation', 'enableRtl', 'endHour', 'eventDragArea', 'eventSettings', 'firstDayOfWeek', 'firstMonthOfYear', 'group', 'headerIndentTemplate', 'headerRows', 'height', 'hideEmptyAgendaDays', 'locale', 'maxDate', 'minDate', 'monthHeaderTemplate', 'monthsCount', 'quickInfoOnSelectionEnd', 'quickInfoTemplates', 'readonly', 'resourceHeaderTemplate', 'resources', 'rowAutoHeight', 'selectedDate', 'showHeaderBar', 'showQuickInfo', 'showTimeIndicator', 'showWeekNumber', 'showWeekend', 'startHour', 'timeFormat', 'timeScale', 'timezone', 'timezoneDataSource', 'views', 'weekRule', 'width', 'workDays', 'workHours'];\nconst outputs$1 = ['actionBegin', 'actionComplete', 'actionFailure', 'cellClick', 'cellDoubleClick', 'created', 'dataBinding', 'dataBound', 'destroyed', 'drag', 'dragStart', 'dragStop', 'eventClick', 'eventRendered', 'hover', 'moreEventsClick', 'navigating', 'popupClose', 'popupOpen', 'renderCell', 'resizeStart', 'resizeStop', 'resizing', 'select', 'currentViewChange', 'selectedDateChange'];\nconst twoWays$1 = ['currentView', 'selectedDate'];\n/**\n * `ej-schedule` represents the Angular Schedule Component.\n * ```html\n * <ejs-schedule></ejs-schedule>\n * ```\n */\n\nlet ScheduleComponent = /*#__PURE__*/(() => {\n  let ScheduleComponent = class ScheduleComponent extends Schedule {\n    constructor(ngEle, srenderer, viewContainerRef, injector) {\n      super();\n      this.ngEle = ngEle;\n      this.srenderer = srenderer;\n      this.viewContainerRef = viewContainerRef;\n      this.injector = injector;\n      this.tags = ['views', 'resources', 'headerRows'];\n      this.element = this.ngEle.nativeElement;\n      this.injectedModules = this.injectedModules || [];\n\n      try {\n        let mod = this.injector.get('ScheduleDay');\n\n        if (this.injectedModules.indexOf(mod) === -1) {\n          this.injectedModules.push(mod);\n        }\n      } catch (_a) {}\n\n      try {\n        let mod = this.injector.get('ScheduleWeek');\n\n        if (this.injectedModules.indexOf(mod) === -1) {\n          this.injectedModules.push(mod);\n        }\n      } catch (_b) {}\n\n      try {\n        let mod = this.injector.get('ScheduleWorkWeek');\n\n        if (this.injectedModules.indexOf(mod) === -1) {\n          this.injectedModules.push(mod);\n        }\n      } catch (_c) {}\n\n      try {\n        let mod = this.injector.get('ScheduleMonth');\n\n        if (this.injectedModules.indexOf(mod) === -1) {\n          this.injectedModules.push(mod);\n        }\n      } catch (_d) {}\n\n      try {\n        let mod = this.injector.get('ScheduleYear');\n\n        if (this.injectedModules.indexOf(mod) === -1) {\n          this.injectedModules.push(mod);\n        }\n      } catch (_e) {}\n\n      try {\n        let mod = this.injector.get('ScheduleAgenda');\n\n        if (this.injectedModules.indexOf(mod) === -1) {\n          this.injectedModules.push(mod);\n        }\n      } catch (_f) {}\n\n      try {\n        let mod = this.injector.get('ScheduleMonthAgenda');\n\n        if (this.injectedModules.indexOf(mod) === -1) {\n          this.injectedModules.push(mod);\n        }\n      } catch (_g) {}\n\n      try {\n        let mod = this.injector.get('ScheduleTimelineViews');\n\n        if (this.injectedModules.indexOf(mod) === -1) {\n          this.injectedModules.push(mod);\n        }\n      } catch (_h) {}\n\n      try {\n        let mod = this.injector.get('ScheduleTimelineMonth');\n\n        if (this.injectedModules.indexOf(mod) === -1) {\n          this.injectedModules.push(mod);\n        }\n      } catch (_j) {}\n\n      try {\n        let mod = this.injector.get('ScheduleTimelineYear');\n\n        if (this.injectedModules.indexOf(mod) === -1) {\n          this.injectedModules.push(mod);\n        }\n      } catch (_k) {}\n\n      try {\n        let mod = this.injector.get('ScheduleResize');\n\n        if (this.injectedModules.indexOf(mod) === -1) {\n          this.injectedModules.push(mod);\n        }\n      } catch (_l) {}\n\n      try {\n        let mod = this.injector.get('ScheduleDragAndDrop');\n\n        if (this.injectedModules.indexOf(mod) === -1) {\n          this.injectedModules.push(mod);\n        }\n      } catch (_m) {}\n\n      try {\n        let mod = this.injector.get('ScheduleExcelExport');\n\n        if (this.injectedModules.indexOf(mod) === -1) {\n          this.injectedModules.push(mod);\n        }\n      } catch (_o) {}\n\n      try {\n        let mod = this.injector.get('ScheduleICalendarExport');\n\n        if (this.injectedModules.indexOf(mod) === -1) {\n          this.injectedModules.push(mod);\n        }\n      } catch (_p) {}\n\n      try {\n        let mod = this.injector.get('ScheduleICalendarImport');\n\n        if (this.injectedModules.indexOf(mod) === -1) {\n          this.injectedModules.push(mod);\n        }\n      } catch (_q) {}\n\n      try {\n        let mod = this.injector.get('SchedulePrint');\n\n        if (this.injectedModules.indexOf(mod) === -1) {\n          this.injectedModules.push(mod);\n        }\n      } catch (_r) {}\n\n      this.registerEvents(outputs$1);\n      this.addTwoWay.call(this, twoWays$1);\n      setValue('currentInstance', this, this.viewContainerRef);\n      this.context = new ComponentBase();\n    }\n\n    ngOnInit() {\n      this.context.ngOnInit(this);\n    }\n\n    ngAfterViewInit() {\n      this.context.ngAfterViewInit(this);\n    }\n\n    ngOnDestroy() {\n      this.context.ngOnDestroy(this);\n    }\n\n    ngAfterContentChecked() {\n      this.tagObjects[0].instance = this.childViews;\n\n      if (this.childResources) {\n        this.tagObjects[1].instance = this.childResources;\n      }\n\n      if (this.childHeaderRows) {\n        this.tagObjects[2].instance = this.childHeaderRows;\n      }\n\n      this.context.ngAfterContentChecked(this);\n    }\n\n  };\n\n  ScheduleComponent.ɵfac = function ScheduleComponent_Factory(t) {\n    return new (t || ScheduleComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Injector));\n  };\n\n  ScheduleComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ScheduleComponent,\n    selectors: [[\"ejs-schedule\"]],\n    contentQueries: function ScheduleComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, _c0, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c1, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c2, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c4, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c3, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c13, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c14, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c15, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c6, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c9, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c10, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c7, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c8, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c16, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c17, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c18, 5);\n        i0.ɵɵcontentQuery(dirIndex, _c11, 5);\n        i0.ɵɵcontentQuery(dirIndex, ViewsDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, ResourcesDirective, 5);\n        i0.ɵɵcontentQuery(dirIndex, HeaderRowsDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dateHeaderTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dateRangeTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dayHeaderTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cellTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cellHeaderTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.eventSettings_tooltipTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.eventSettings_template = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editorTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.monthHeaderTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.timeScale_minorSlotTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.timeScale_majorSlotTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.resourceHeaderTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerIndentTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.quickInfoTemplates_header = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.quickInfoTemplates_content = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.quickInfoTemplates_footer = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.group_headerTooltipTemplate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.childViews = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.childResources = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.childHeaderRows = _t.first);\n      }\n    },\n    inputs: {\n      agendaDaysCount: \"agendaDaysCount\",\n      allowDragAndDrop: \"allowDragAndDrop\",\n      allowInline: \"allowInline\",\n      allowKeyboardInteraction: \"allowKeyboardInteraction\",\n      allowMultiCellSelection: \"allowMultiCellSelection\",\n      allowMultiDrag: \"allowMultiDrag\",\n      allowMultiRowSelection: \"allowMultiRowSelection\",\n      allowResizing: \"allowResizing\",\n      allowSwiping: \"allowSwiping\",\n      calendarMode: \"calendarMode\",\n      cellHeaderTemplate: \"cellHeaderTemplate\",\n      cellTemplate: \"cellTemplate\",\n      cssClass: \"cssClass\",\n      currentView: \"currentView\",\n      dateFormat: \"dateFormat\",\n      dateHeaderTemplate: \"dateHeaderTemplate\",\n      dateRangeTemplate: \"dateRangeTemplate\",\n      dayHeaderTemplate: \"dayHeaderTemplate\",\n      editorTemplate: \"editorTemplate\",\n      enableAdaptiveUI: \"enableAdaptiveUI\",\n      enableAllDayScroll: \"enableAllDayScroll\",\n      enableHtmlSanitizer: \"enableHtmlSanitizer\",\n      enablePersistence: \"enablePersistence\",\n      enableRecurrenceValidation: \"enableRecurrenceValidation\",\n      enableRtl: \"enableRtl\",\n      endHour: \"endHour\",\n      eventDragArea: \"eventDragArea\",\n      eventSettings: \"eventSettings\",\n      firstDayOfWeek: \"firstDayOfWeek\",\n      firstMonthOfYear: \"firstMonthOfYear\",\n      group: \"group\",\n      headerIndentTemplate: \"headerIndentTemplate\",\n      headerRows: \"headerRows\",\n      height: \"height\",\n      hideEmptyAgendaDays: \"hideEmptyAgendaDays\",\n      locale: \"locale\",\n      maxDate: \"maxDate\",\n      minDate: \"minDate\",\n      monthHeaderTemplate: \"monthHeaderTemplate\",\n      monthsCount: \"monthsCount\",\n      quickInfoOnSelectionEnd: \"quickInfoOnSelectionEnd\",\n      quickInfoTemplates: \"quickInfoTemplates\",\n      readonly: \"readonly\",\n      resourceHeaderTemplate: \"resourceHeaderTemplate\",\n      resources: \"resources\",\n      rowAutoHeight: \"rowAutoHeight\",\n      selectedDate: \"selectedDate\",\n      showHeaderBar: \"showHeaderBar\",\n      showQuickInfo: \"showQuickInfo\",\n      showTimeIndicator: \"showTimeIndicator\",\n      showWeekNumber: \"showWeekNumber\",\n      showWeekend: \"showWeekend\",\n      startHour: \"startHour\",\n      timeFormat: \"timeFormat\",\n      timeScale: \"timeScale\",\n      timezone: \"timezone\",\n      timezoneDataSource: \"timezoneDataSource\",\n      views: \"views\",\n      weekRule: \"weekRule\",\n      width: \"width\",\n      workDays: \"workDays\",\n      workHours: \"workHours\"\n    },\n    outputs: {\n      actionBegin: \"actionBegin\",\n      actionComplete: \"actionComplete\",\n      actionFailure: \"actionFailure\",\n      cellClick: \"cellClick\",\n      cellDoubleClick: \"cellDoubleClick\",\n      created: \"created\",\n      dataBinding: \"dataBinding\",\n      dataBound: \"dataBound\",\n      destroyed: \"destroyed\",\n      drag: \"drag\",\n      dragStart: \"dragStart\",\n      dragStop: \"dragStop\",\n      eventClick: \"eventClick\",\n      eventRendered: \"eventRendered\",\n      hover: \"hover\",\n      moreEventsClick: \"moreEventsClick\",\n      navigating: \"navigating\",\n      popupClose: \"popupClose\",\n      popupOpen: \"popupOpen\",\n      renderCell: \"renderCell\",\n      resizeStart: \"resizeStart\",\n      resizeStop: \"resizeStop\",\n      resizing: \"resizing\",\n      select: \"select\",\n      currentViewChange: \"currentViewChange\",\n      selectedDateChange: \"selectedDateChange\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function ScheduleComponent_Template(rf, ctx) {},\n    encapsulation: 2,\n    changeDetection: 0\n  });\n\n  __decorate([Template()], ScheduleComponent.prototype, \"dateHeaderTemplate\", void 0);\n\n  __decorate([Template()], ScheduleComponent.prototype, \"dateRangeTemplate\", void 0);\n\n  __decorate([Template()], ScheduleComponent.prototype, \"dayHeaderTemplate\", void 0);\n\n  __decorate([Template()], ScheduleComponent.prototype, \"cellTemplate\", void 0);\n\n  __decorate([Template()], ScheduleComponent.prototype, \"cellHeaderTemplate\", void 0);\n\n  __decorate([Template()], ScheduleComponent.prototype, \"eventSettings_tooltipTemplate\", void 0);\n\n  __decorate([Template()], ScheduleComponent.prototype, \"eventSettings_template\", void 0);\n\n  __decorate([Template()], ScheduleComponent.prototype, \"editorTemplate\", void 0);\n\n  __decorate([Template()], ScheduleComponent.prototype, \"monthHeaderTemplate\", void 0);\n\n  __decorate([Template()], ScheduleComponent.prototype, \"timeScale_minorSlotTemplate\", void 0);\n\n  __decorate([Template()], ScheduleComponent.prototype, \"timeScale_majorSlotTemplate\", void 0);\n\n  __decorate([Template()], ScheduleComponent.prototype, \"resourceHeaderTemplate\", void 0);\n\n  __decorate([Template()], ScheduleComponent.prototype, \"headerIndentTemplate\", void 0);\n\n  __decorate([Template()], ScheduleComponent.prototype, \"quickInfoTemplates_header\", void 0);\n\n  __decorate([Template()], ScheduleComponent.prototype, \"quickInfoTemplates_content\", void 0);\n\n  __decorate([Template()], ScheduleComponent.prototype, \"quickInfoTemplates_footer\", void 0);\n\n  __decorate([Template()], ScheduleComponent.prototype, \"group_headerTooltipTemplate\", void 0);\n\n  ScheduleComponent = __decorate([ComponentMixins([ComponentBase])], ScheduleComponent);\n  return ScheduleComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * NgModule definition for the Schedule component.\n */\n\n\nlet ScheduleModule = /*#__PURE__*/(() => {\n  class ScheduleModule {}\n\n  ScheduleModule.ɵfac = function ScheduleModule_Factory(t) {\n    return new (t || ScheduleModule)();\n  };\n\n  ScheduleModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ScheduleModule\n  });\n  ScheduleModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return ScheduleModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst DayService = {\n  provide: 'ScheduleDay',\n  useValue: Day\n};\nconst WeekService = {\n  provide: 'ScheduleWeek',\n  useValue: Week\n};\nconst WorkWeekService = {\n  provide: 'ScheduleWorkWeek',\n  useValue: WorkWeek\n};\nconst MonthService = {\n  provide: 'ScheduleMonth',\n  useValue: Month\n};\nconst YearService = {\n  provide: 'ScheduleYear',\n  useValue: Year\n};\nconst AgendaService = {\n  provide: 'ScheduleAgenda',\n  useValue: Agenda\n};\nconst MonthAgendaService = {\n  provide: 'ScheduleMonthAgenda',\n  useValue: MonthAgenda\n};\nconst TimelineViewsService = {\n  provide: 'ScheduleTimelineViews',\n  useValue: TimelineViews\n};\nconst TimelineMonthService = {\n  provide: 'ScheduleTimelineMonth',\n  useValue: TimelineMonth\n};\nconst TimelineYearService = {\n  provide: 'ScheduleTimelineYear',\n  useValue: TimelineYear\n};\nconst ResizeService = {\n  provide: 'ScheduleResize',\n  useValue: Resize\n};\nconst DragAndDropService = {\n  provide: 'ScheduleDragAndDrop',\n  useValue: DragAndDrop\n};\nconst ExcelExportService = {\n  provide: 'ScheduleExcelExport',\n  useValue: ExcelExport\n};\nconst ICalendarExportService = {\n  provide: 'ScheduleICalendarExport',\n  useValue: ICalendarExport\n};\nconst ICalendarImportService = {\n  provide: 'ScheduleICalendarImport',\n  useValue: ICalendarImport\n};\nconst PrintService = {\n  provide: 'SchedulePrint',\n  useValue: Print\n};\n/**\n * NgModule definition for the Schedule component with providers.\n */\n\nlet ScheduleAllModule = /*#__PURE__*/(() => {\n  class ScheduleAllModule {}\n\n  ScheduleAllModule.ɵfac = function ScheduleAllModule_Factory(t) {\n    return new (t || ScheduleAllModule)();\n  };\n\n  ScheduleAllModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ScheduleAllModule\n  });\n  ScheduleAllModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [DayService, WeekService, WorkWeekService, MonthService, YearService, AgendaService, MonthAgendaService, TimelineViewsService, TimelineMonthService, TimelineYearService, ResizeService, DragAndDropService, ExcelExportService, ICalendarExportService, ICalendarImportService, PrintService],\n    imports: [[CommonModule, ScheduleModule], ScheduleModule]\n  });\n  return ScheduleAllModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst inputs = ['calendarMode', 'cssClass', 'dateFormat', 'enablePersistence', 'enableRtl', 'firstDayOfWeek', 'frequencies', 'locale', 'maxDate', 'minDate', 'selectedType', 'startDate', 'value'];\nconst outputs = ['change'];\nconst twoWays = [];\n/**\n * `ejs-recurrenceeditor` represents the Angular RecurrenceEditor Component.\n * ```html\n * <ejs-recurrenceeditor></ejs-recurrenceeditor>\n * ```\n */\n\nlet RecurrenceEditorComponent = /*#__PURE__*/(() => {\n  let RecurrenceEditorComponent = class RecurrenceEditorComponent extends RecurrenceEditor {\n    constructor(ngEle, srenderer, viewContainerRef, injector) {\n      super();\n      this.ngEle = ngEle;\n      this.srenderer = srenderer;\n      this.viewContainerRef = viewContainerRef;\n      this.injector = injector;\n      this.element = this.ngEle.nativeElement;\n      this.injectedModules = this.injectedModules || [];\n      this.registerEvents(outputs);\n      this.addTwoWay.call(this, twoWays);\n      setValue('currentInstance', this, this.viewContainerRef);\n      this.context = new ComponentBase();\n    }\n\n    ngOnInit() {\n      this.context.ngOnInit(this);\n    }\n\n    ngAfterViewInit() {\n      this.context.ngAfterViewInit(this);\n    }\n\n    ngOnDestroy() {\n      this.context.ngOnDestroy(this);\n    }\n\n    ngAfterContentChecked() {\n      this.context.ngAfterContentChecked(this);\n    }\n\n  };\n\n  RecurrenceEditorComponent.ɵfac = function RecurrenceEditorComponent_Factory(t) {\n    return new (t || RecurrenceEditorComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.Injector));\n  };\n\n  RecurrenceEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: RecurrenceEditorComponent,\n    selectors: [[\"ejs-recurrenceeditor\"]],\n    inputs: {\n      calendarMode: \"calendarMode\",\n      cssClass: \"cssClass\",\n      dateFormat: \"dateFormat\",\n      enablePersistence: \"enablePersistence\",\n      enableRtl: \"enableRtl\",\n      firstDayOfWeek: \"firstDayOfWeek\",\n      frequencies: \"frequencies\",\n      locale: \"locale\",\n      maxDate: \"maxDate\",\n      minDate: \"minDate\",\n      selectedType: \"selectedType\",\n      startDate: \"startDate\",\n      value: \"value\"\n    },\n    outputs: {\n      change: \"change\"\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function RecurrenceEditorComponent_Template(rf, ctx) {},\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  RecurrenceEditorComponent = __decorate([ComponentMixins([ComponentBase])], RecurrenceEditorComponent);\n  return RecurrenceEditorComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * NgModule definition for the RecurrenceEditor component.\n */\n\n\nlet RecurrenceEditorModule = /*#__PURE__*/(() => {\n  class RecurrenceEditorModule {}\n\n  RecurrenceEditorModule.ɵfac = function RecurrenceEditorModule_Factory(t) {\n    return new (t || RecurrenceEditorModule)();\n  };\n\n  RecurrenceEditorModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: RecurrenceEditorModule\n  });\n  RecurrenceEditorModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return RecurrenceEditorModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * NgModule definition for the RecurrenceEditor component with providers.\n */\n\n\nlet RecurrenceEditorAllModule = /*#__PURE__*/(() => {\n  class RecurrenceEditorAllModule {}\n\n  RecurrenceEditorAllModule.ɵfac = function RecurrenceEditorAllModule_Factory(t) {\n    return new (t || RecurrenceEditorAllModule)();\n  };\n\n  RecurrenceEditorAllModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: RecurrenceEditorAllModule\n  });\n  RecurrenceEditorAllModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [],\n    imports: [[CommonModule, RecurrenceEditorModule], RecurrenceEditorModule]\n  });\n  return RecurrenceEditorAllModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})(); // Mapping root file for package generation\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AgendaService, DayService, DragAndDropService, ExcelExportService, HeaderRowDirective, HeaderRowsDirective, ICalendarExportService, ICalendarImportService, MonthAgendaService, MonthService, PrintService, RecurrenceEditorAllModule, RecurrenceEditorComponent, RecurrenceEditorModule, ResizeService, ResourceDirective, ResourcesDirective, ScheduleAllModule, ScheduleComponent, ScheduleModule, TimelineMonthService, TimelineViewsService, TimelineYearService, ViewDirective, ViewsDirective, WeekService, WorkWeekService, YearService }; //# sourceMappingURL=syncfusion-ej2-angular-schedule.mjs.map","map":null,"metadata":{},"sourceType":"module"}