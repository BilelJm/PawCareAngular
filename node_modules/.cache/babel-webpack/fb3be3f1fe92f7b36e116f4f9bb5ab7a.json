{"ast":null,"code":"import { createPopper } from \"@popperjs/core\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../views/auth/_services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../views/admin/users/_service/userapi.service\";\nimport * as i4 from \"../../../views/auth/_services/storage.service\";\nconst _c0 = [\"btnDropdownRef\"];\nconst _c1 = [\"popoverDropdownRef\"];\n\nfunction UserDropdownComponent_h6_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h6\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.name, \" \");\n  }\n}\n\nfunction UserDropdownComponent_h6_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h6\", 11);\n    i0.ɵɵtext(1, \" Login \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UserDropdownComponent_button_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵtext(1, \"Login\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UserDropdownComponent_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function UserDropdownComponent_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.logout();\n    });\n    i0.ɵɵtext(1, \"Logout\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let UserDropdownComponent = /*#__PURE__*/(() => {\n  class UserDropdownComponent {\n    constructor(userAuthService, router, userService, storageService) {\n      this.userAuthService = userAuthService;\n      this.router = router;\n      this.userService = userService;\n      this.storageService = storageService;\n      this.dropdownPopoverShow = false;\n      this.name = this.storageService.getUser().username;\n    }\n\n    ngAfterViewInit() {\n      createPopper(this.btnDropdownRef.nativeElement, this.popoverDropdownRef.nativeElement, {\n        placement: \"bottom-start\"\n      });\n    }\n\n    toggleDropdown(event) {\n      event.preventDefault();\n\n      if (this.dropdownPopoverShow) {\n        this.dropdownPopoverShow = false;\n      } else {\n        this.dropdownPopoverShow = true;\n      }\n    }\n\n    ngOnInit() {}\n\n    isLoggedIn() {\n      console.log(this.name);\n      return this.storageService.isLoggedIn();\n    }\n\n    logout() {\n      this.storageService.clean();\n      this.router.navigate(['/']);\n    }\n\n  }\n\n  UserDropdownComponent.ɵfac = function UserDropdownComponent_Factory(t) {\n    return new (t || UserDropdownComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserapiService), i0.ɵɵdirectiveInject(i4.StorageService));\n  };\n\n  UserDropdownComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserDropdownComponent,\n    selectors: [[\"app-user-dropdown\"]],\n    viewQuery: function UserDropdownComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.btnDropdownRef = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.popoverDropdownRef = _t.first);\n      }\n    },\n    decls: 10,\n    vars: 5,\n    consts: [[\"href\", \"#pablo\", 1, \"text-blueGray-500\", \"block\", 3, \"click\"], [\"btnDropdownRef\", \"\"], [1, \"items-center\", \"flex\"], [\"class\", \"md:min-w-full text-blueGray-500 text-xs uppercase font-bold block pt-1 pb-4 no-underline\", \"style\", \"color: aliceblue;\", 4, \"ngIf\"], [\"class\", \"md:min-w-full text-blueGray-500 text-xs uppercase font-bold block pt-1 pb-4 no-underline\", \"style\", \"color: aliceblue;\", \"routerLink\", \"[/auth/login]\", 4, \"ngIf\"], [1, \"min-w-48\", \"z-50\"], [\"popoverDropdownRef\", \"\"], [1, \"bg-white\", \"text-base\", \"z-50\", \"float-left\", \"py-2\", \"list-none\", \"text-left\", \"rounded\", \"shadow-lg\", \"mt-1\", \"min-w-48\", 3, \"ngClass\"], [\"type\", \"button\", \"class\", \"btn btn-success\", \"routerLink\", \"/login\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"btn btn-danger\", 3, \"click\", 4, \"ngIf\"], [1, \"md:min-w-full\", \"text-blueGray-500\", \"text-xs\", \"uppercase\", \"font-bold\", \"block\", \"pt-1\", \"pb-4\", \"no-underline\", 2, \"color\", \"aliceblue\"], [\"routerLink\", \"[/auth/login]\", 1, \"md:min-w-full\", \"text-blueGray-500\", \"text-xs\", \"uppercase\", \"font-bold\", \"block\", \"pt-1\", \"pb-4\", \"no-underline\", 2, \"color\", \"aliceblue\"], [\"type\", \"button\", \"routerLink\", \"/login\", 1, \"btn\", \"btn-success\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function UserDropdownComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"a\", 0, 1);\n        i0.ɵɵlistener(\"click\", function UserDropdownComponent_Template_a_click_0_listener($event) {\n          return ctx.toggleDropdown($event);\n        });\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtemplate(3, UserDropdownComponent_h6_3_Template, 2, 1, \"h6\", 3);\n        i0.ɵɵtemplate(4, UserDropdownComponent_h6_4_Template, 2, 0, \"h6\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 5, 6);\n        i0.ɵɵelementStart(7, \"div\", 7);\n        i0.ɵɵtemplate(8, UserDropdownComponent_button_8_Template, 2, 0, \"button\", 8);\n        i0.ɵɵtemplate(9, UserDropdownComponent_button_9_Template, 2, 0, \"button\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoggedIn());\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", ctx.dropdownPopoverShow ? \"block\" : \"hidden\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoggedIn());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn());\n      }\n    },\n    encapsulation: 2\n  });\n  return UserDropdownComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}