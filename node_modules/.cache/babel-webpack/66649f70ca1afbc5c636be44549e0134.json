{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from \"@angular/core\";\nimport { createPopper } from \"@popperjs/core\";\nlet IndexDropdownComponent = class IndexDropdownComponent {\n  constructor(router, userService, storageService) {\n    this.router = router;\n    this.userService = userService;\n    this.storageService = storageService;\n    this.dropdownPopoverShow = false;\n    this.name = this.storageService.getUser().username;\n  } //id= this.storageService.getUser().id;\n\n\n  ngOnInit() {}\n\n  toggleDropdown(event) {\n    event.preventDefault();\n\n    if (this.dropdownPopoverShow) {\n      this.dropdownPopoverShow = false;\n    } else {\n      this.dropdownPopoverShow = true;\n      this.createPoppper();\n    }\n  }\n\n  createPoppper() {\n    createPopper(this.btnDropdownRef.nativeElement, this.popoverDropdownRef.nativeElement, {\n      placement: \"bottom-start\"\n    });\n  }\n\n  isLoggedIn() {\n    console.log(this.name);\n    return this.storageService.isLoggedIn();\n  }\n\n  logout() {\n    this.storageService.clean();\n    this.router.navigate(['/']);\n  }\n\n};\n\n__decorate([ViewChild(\"btnDropdownRef\", {\n  static: false\n})], IndexDropdownComponent.prototype, \"btnDropdownRef\", void 0);\n\n__decorate([ViewChild(\"popoverDropdownRef\", {\n  static: false\n})], IndexDropdownComponent.prototype, \"popoverDropdownRef\", void 0);\n\nIndexDropdownComponent = __decorate([Component({\n  selector: \"app-index-dropdown\",\n  templateUrl: \"./index-dropdown.component.html\"\n})], IndexDropdownComponent);\nexport { IndexDropdownComponent };","map":null,"metadata":{},"sourceType":"module"}